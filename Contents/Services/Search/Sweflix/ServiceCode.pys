HTTP_HEADERS = {
	'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36',
	'Referer': 'http://sweflix.com/'
}

JSON_URL = 'http://sweflix.com/api-v3/json.php?lim=9999'

RE_DURATION = Regex('(?:(\d+)h)?(\d+)min')

####################################################################################################
def Search(query):

	oc = ObjectContainer(title2='Search Results')

	if len(query) < 3:
		return oc

	for movie in JSON.ObjectFromURL(JSON_URL, headers=HTTP_HEADERS):

		if movie['type'] not in ('barn', 'film'):
			continue

		if not movie['titel'] or movie['titel'] == '':
			continue

		title = String.DecodeHTMLEntities(movie['titel'])

		if query.lower() not in title.lower():
			continue

		url = 'http://sweflix.com/#%s' % movie['id']
		summary = String.DecodeHTMLEntities(movie['plot']) if movie['plot'] else None
		thumb = movie['poster']
		genres = movie['cat'].split(', ')
		year = int(movie['year']) if movie['year'] is not None or movie['year'] != "" else None
		try: rating = float(movie['imdbrate'])
		except: rating = None

		try:
			duration = movie['duration'].replace(' ', '')
			ms = 0
			(h, m) = RE_DURATION.search(duration).groups()
			if h:
				ms += int(h) * 60 * 60 * 1000
			ms += int(m) * 60 * 1000
		except:
			ms = None

		oc.add(MovieObject(
			url = url,
			title = title,
			summary = summary,
			thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.jpg'),
			genres = genres,
			year = year,
			rating = rating,
			duration = ms
		))

	return oc
